-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from src/Imp/Frontend/Parser/Parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> Program                           (0)
	Program -> CodeBlock                               (1)
	CodeBlock -> '{' StmtList '}'                      (2)
	StmtList -> StmtList Stmt                          (3)
	StmtList ->                                        (4)
	Stmt -> 'skip' ';'                                 (5)
	Stmt -> Id ':=' Exp ';'                            (6)
	Stmt -> PTy Id Init ';'                            (7)
	Stmt -> 'if' Exp 'then' CodeBlock 'else' CodeBlock   (8)
	Stmt -> 'print' Exp ';'                            (9)
	Stmt -> 'read' Id ';'                              (10)
	Stmt -> 'while' Exp CodeBlock                      (11)
	Id -> id                                           (12)
	PTy -> 'int'                                       (13)
	PTy -> 'bool'                                      (14)
	Init -> ':=' Exp                                   (15)
	Init ->                                            (16)
	Exp -> num                                         (17)
	Exp -> 'true'                                      (18)
	Exp -> 'false'                                     (19)
	Exp -> Id                                          (20)
	Exp -> Exp '+' Exp                                 (21)
	Exp -> Exp '*' Exp                                 (22)
	Exp -> Exp '-' Exp                                 (23)
	Exp -> Exp '/' Exp                                 (24)
	Exp -> Exp '<' Exp                                 (25)
	Exp -> Exp '==' Exp                                (26)
	Exp -> Exp '&&' Exp                                (27)
	Exp -> '!' Exp                                     (28)
	Exp -> '(' Exp ')'                                 (29)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	id             { Token _ (TIdent $$) }
	num            { Token _ (TNumber $$) }
	':='           { Token _ TAssign }
	'read'         { Token _ TRead }
	'print'        { Token _ TPrint }
	'if'           { Token _ TIf }
	'then'         { Token _ TThen }
	'else'         { Token _ TElse }
	'while'        { Token _ TWhile }
	';'            { Token _ TSemi }
	'('            { Token _ TLParen }
	')'            { Token _ TRParen }
	'{'            { Token _ TLBrace }
	'}'            { Token _ TRBrace }
	'+'            { Token _ TPlus }
	'*'            { Token _ TTimes }
	'-'            { Token _ TMinus }
	'/'            { Token _ TDiv }
	'=='           { Token _ TEq }
	'<'            { Token _ TLt }
	'!'            { Token _ TNot }
	'&&'           { Token _ TAnd }
	'int'          { Token _ TTInt }
	'bool'         { Token _ TTBool }
	'true'         { Token _ TTrue }
	'false'        { Token _ TFalse }
	'skip'         { Token _ TSkip }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	Program         rule  1
	CodeBlock       rule  2
	StmtList        rules 3, 4
	Stmt            rules 5, 6, 7, 8, 9, 10, 11
	Id              rule  12
	PTy             rules 13, 14
	Init            rules 15, 16
	Exp             rules 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parser -> . Program                          (rule 0)

	'{'            shift, and enter state 3

	Program        goto state 4
	CodeBlock      goto state 2

State 1

	Program -> . CodeBlock                              (rule 1)

	'{'            shift, and enter state 3

	CodeBlock      goto state 2

State 2

	Program -> CodeBlock .                              (rule 1)

	%eof           reduce using rule 1


State 3

	CodeBlock -> '{' . StmtList '}'                     (rule 2)

	id             reduce using rule 4
	'read'         reduce using rule 4
	'print'        reduce using rule 4
	'if'           reduce using rule 4
	'while'        reduce using rule 4
	'}'            reduce using rule 4
	'int'          reduce using rule 4
	'bool'         reduce using rule 4
	'skip'         reduce using rule 4

	StmtList       goto state 5

State 4

	%start_parser -> Program .                          (rule 0)

	%eof           accept


State 5

	CodeBlock -> '{' StmtList . '}'                     (rule 2)
	StmtList -> StmtList . Stmt                         (rule 3)

	id             shift, and enter state 9
	'read'         shift, and enter state 10
	'print'        shift, and enter state 11
	'if'           shift, and enter state 12
	'while'        shift, and enter state 13
	'}'            shift, and enter state 14
	'int'          shift, and enter state 15
	'bool'         shift, and enter state 16
	'skip'         shift, and enter state 17

	Stmt           goto state 6
	Id             goto state 7
	PTy            goto state 8

State 6

	StmtList -> StmtList Stmt .                         (rule 3)

	id             reduce using rule 3
	'read'         reduce using rule 3
	'print'        reduce using rule 3
	'if'           reduce using rule 3
	'while'        reduce using rule 3
	'}'            reduce using rule 3
	'int'          reduce using rule 3
	'bool'         reduce using rule 3
	'skip'         reduce using rule 3


State 7

	Stmt -> Id . ':=' Exp ';'                           (rule 6)

	':='           shift, and enter state 30


State 8

	Stmt -> PTy . Id Init ';'                           (rule 7)

	id             shift, and enter state 9

	Id             goto state 29

State 9

	Id -> id .                                          (rule 12)

	':='           reduce using rule 12
	'then'         reduce using rule 12
	';'            reduce using rule 12
	')'            reduce using rule 12
	'{'            reduce using rule 12
	'+'            reduce using rule 12
	'*'            reduce using rule 12
	'-'            reduce using rule 12
	'/'            reduce using rule 12
	'=='           reduce using rule 12
	'<'            reduce using rule 12
	'&&'           reduce using rule 12


State 10

	Stmt -> 'read' . Id ';'                             (rule 10)

	id             shift, and enter state 9

	Id             goto state 28

State 11

	Stmt -> 'print' . Exp ';'                           (rule 9)

	id             shift, and enter state 9
	num            shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 23
	'true'         shift, and enter state 24
	'false'        shift, and enter state 25

	Id             goto state 19
	Exp            goto state 27

State 12

	Stmt -> 'if' . Exp 'then' CodeBlock 'else' CodeBlock    (rule 8)

	id             shift, and enter state 9
	num            shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 23
	'true'         shift, and enter state 24
	'false'        shift, and enter state 25

	Id             goto state 19
	Exp            goto state 26

State 13

	Stmt -> 'while' . Exp CodeBlock                     (rule 11)

	id             shift, and enter state 9
	num            shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 23
	'true'         shift, and enter state 24
	'false'        shift, and enter state 25

	Id             goto state 19
	Exp            goto state 20

State 14

	CodeBlock -> '{' StmtList '}' .                     (rule 2)

	id             reduce using rule 2
	'read'         reduce using rule 2
	'print'        reduce using rule 2
	'if'           reduce using rule 2
	'else'         reduce using rule 2
	'while'        reduce using rule 2
	'}'            reduce using rule 2
	'int'          reduce using rule 2
	'bool'         reduce using rule 2
	'skip'         reduce using rule 2
	%eof           reduce using rule 2


State 15

	PTy -> 'int' .                                      (rule 13)

	id             reduce using rule 13


State 16

	PTy -> 'bool' .                                     (rule 14)

	id             reduce using rule 14


State 17

	Stmt -> 'skip' . ';'                                (rule 5)

	';'            shift, and enter state 18


State 18

	Stmt -> 'skip' ';' .                                (rule 5)

	id             reduce using rule 5
	'read'         reduce using rule 5
	'print'        reduce using rule 5
	'if'           reduce using rule 5
	'while'        reduce using rule 5
	'}'            reduce using rule 5
	'int'          reduce using rule 5
	'bool'         reduce using rule 5
	'skip'         reduce using rule 5


State 19

	Exp -> Id .                                         (rule 20)

	'then'         reduce using rule 20
	';'            reduce using rule 20
	')'            reduce using rule 20
	'{'            reduce using rule 20
	'+'            reduce using rule 20
	'*'            reduce using rule 20
	'-'            reduce using rule 20
	'/'            reduce using rule 20
	'=='           reduce using rule 20
	'<'            reduce using rule 20
	'&&'           reduce using rule 20


State 20

	Stmt -> 'while' Exp . CodeBlock                     (rule 11)
	Exp -> Exp . '+' Exp                                (rule 21)
	Exp -> Exp . '*' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '/' Exp                                (rule 24)
	Exp -> Exp . '<' Exp                                (rule 25)
	Exp -> Exp . '==' Exp                               (rule 26)
	Exp -> Exp . '&&' Exp                               (rule 27)

	'{'            shift, and enter state 3
	'+'            shift, and enter state 36
	'*'            shift, and enter state 37
	'-'            shift, and enter state 38
	'/'            shift, and enter state 39
	'=='           shift, and enter state 40
	'<'            shift, and enter state 41
	'&&'           shift, and enter state 42

	CodeBlock      goto state 46

State 21

	Exp -> num .                                        (rule 17)

	'then'         reduce using rule 17
	';'            reduce using rule 17
	')'            reduce using rule 17
	'{'            reduce using rule 17
	'+'            reduce using rule 17
	'*'            reduce using rule 17
	'-'            reduce using rule 17
	'/'            reduce using rule 17
	'=='           reduce using rule 17
	'<'            reduce using rule 17
	'&&'           reduce using rule 17


State 22

	Exp -> '(' . Exp ')'                                (rule 29)

	id             shift, and enter state 9
	num            shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 23
	'true'         shift, and enter state 24
	'false'        shift, and enter state 25

	Id             goto state 19
	Exp            goto state 45

State 23

	Exp -> '!' . Exp                                    (rule 28)

	id             shift, and enter state 9
	num            shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 23
	'true'         shift, and enter state 24
	'false'        shift, and enter state 25

	Id             goto state 19
	Exp            goto state 44

State 24

	Exp -> 'true' .                                     (rule 18)

	'then'         reduce using rule 18
	';'            reduce using rule 18
	')'            reduce using rule 18
	'{'            reduce using rule 18
	'+'            reduce using rule 18
	'*'            reduce using rule 18
	'-'            reduce using rule 18
	'/'            reduce using rule 18
	'=='           reduce using rule 18
	'<'            reduce using rule 18
	'&&'           reduce using rule 18


State 25

	Exp -> 'false' .                                    (rule 19)

	'then'         reduce using rule 19
	';'            reduce using rule 19
	')'            reduce using rule 19
	'{'            reduce using rule 19
	'+'            reduce using rule 19
	'*'            reduce using rule 19
	'-'            reduce using rule 19
	'/'            reduce using rule 19
	'=='           reduce using rule 19
	'<'            reduce using rule 19
	'&&'           reduce using rule 19


State 26

	Stmt -> 'if' Exp . 'then' CodeBlock 'else' CodeBlock    (rule 8)
	Exp -> Exp . '+' Exp                                (rule 21)
	Exp -> Exp . '*' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '/' Exp                                (rule 24)
	Exp -> Exp . '<' Exp                                (rule 25)
	Exp -> Exp . '==' Exp                               (rule 26)
	Exp -> Exp . '&&' Exp                               (rule 27)

	'then'         shift, and enter state 43
	'+'            shift, and enter state 36
	'*'            shift, and enter state 37
	'-'            shift, and enter state 38
	'/'            shift, and enter state 39
	'=='           shift, and enter state 40
	'<'            shift, and enter state 41
	'&&'           shift, and enter state 42


State 27

	Stmt -> 'print' Exp . ';'                           (rule 9)
	Exp -> Exp . '+' Exp                                (rule 21)
	Exp -> Exp . '*' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '/' Exp                                (rule 24)
	Exp -> Exp . '<' Exp                                (rule 25)
	Exp -> Exp . '==' Exp                               (rule 26)
	Exp -> Exp . '&&' Exp                               (rule 27)

	';'            shift, and enter state 35
	'+'            shift, and enter state 36
	'*'            shift, and enter state 37
	'-'            shift, and enter state 38
	'/'            shift, and enter state 39
	'=='           shift, and enter state 40
	'<'            shift, and enter state 41
	'&&'           shift, and enter state 42


State 28

	Stmt -> 'read' Id . ';'                             (rule 10)

	';'            shift, and enter state 34


State 29

	Stmt -> PTy Id . Init ';'                           (rule 7)

	':='           shift, and enter state 33
	';'            reduce using rule 16

	Init           goto state 32

State 30

	Stmt -> Id ':=' . Exp ';'                           (rule 6)

	id             shift, and enter state 9
	num            shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 23
	'true'         shift, and enter state 24
	'false'        shift, and enter state 25

	Id             goto state 19
	Exp            goto state 31

State 31

	Stmt -> Id ':=' Exp . ';'                           (rule 6)
	Exp -> Exp . '+' Exp                                (rule 21)
	Exp -> Exp . '*' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '/' Exp                                (rule 24)
	Exp -> Exp . '<' Exp                                (rule 25)
	Exp -> Exp . '==' Exp                               (rule 26)
	Exp -> Exp . '&&' Exp                               (rule 27)

	';'            shift, and enter state 58
	'+'            shift, and enter state 36
	'*'            shift, and enter state 37
	'-'            shift, and enter state 38
	'/'            shift, and enter state 39
	'=='           shift, and enter state 40
	'<'            shift, and enter state 41
	'&&'           shift, and enter state 42


State 32

	Stmt -> PTy Id Init . ';'                           (rule 7)

	';'            shift, and enter state 57


State 33

	Init -> ':=' . Exp                                  (rule 15)

	id             shift, and enter state 9
	num            shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 23
	'true'         shift, and enter state 24
	'false'        shift, and enter state 25

	Id             goto state 19
	Exp            goto state 56

State 34

	Stmt -> 'read' Id ';' .                             (rule 10)

	id             reduce using rule 10
	'read'         reduce using rule 10
	'print'        reduce using rule 10
	'if'           reduce using rule 10
	'while'        reduce using rule 10
	'}'            reduce using rule 10
	'int'          reduce using rule 10
	'bool'         reduce using rule 10
	'skip'         reduce using rule 10


State 35

	Stmt -> 'print' Exp ';' .                           (rule 9)

	id             reduce using rule 9
	'read'         reduce using rule 9
	'print'        reduce using rule 9
	'if'           reduce using rule 9
	'while'        reduce using rule 9
	'}'            reduce using rule 9
	'int'          reduce using rule 9
	'bool'         reduce using rule 9
	'skip'         reduce using rule 9


State 36

	Exp -> Exp '+' . Exp                                (rule 21)

	id             shift, and enter state 9
	num            shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 23
	'true'         shift, and enter state 24
	'false'        shift, and enter state 25

	Id             goto state 19
	Exp            goto state 55

State 37

	Exp -> Exp '*' . Exp                                (rule 22)

	id             shift, and enter state 9
	num            shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 23
	'true'         shift, and enter state 24
	'false'        shift, and enter state 25

	Id             goto state 19
	Exp            goto state 54

State 38

	Exp -> Exp '-' . Exp                                (rule 23)

	id             shift, and enter state 9
	num            shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 23
	'true'         shift, and enter state 24
	'false'        shift, and enter state 25

	Id             goto state 19
	Exp            goto state 53

State 39

	Exp -> Exp '/' . Exp                                (rule 24)

	id             shift, and enter state 9
	num            shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 23
	'true'         shift, and enter state 24
	'false'        shift, and enter state 25

	Id             goto state 19
	Exp            goto state 52

State 40

	Exp -> Exp '==' . Exp                               (rule 26)

	id             shift, and enter state 9
	num            shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 23
	'true'         shift, and enter state 24
	'false'        shift, and enter state 25

	Id             goto state 19
	Exp            goto state 51

State 41

	Exp -> Exp '<' . Exp                                (rule 25)

	id             shift, and enter state 9
	num            shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 23
	'true'         shift, and enter state 24
	'false'        shift, and enter state 25

	Id             goto state 19
	Exp            goto state 50

State 42

	Exp -> Exp '&&' . Exp                               (rule 27)

	id             shift, and enter state 9
	num            shift, and enter state 21
	'('            shift, and enter state 22
	'!'            shift, and enter state 23
	'true'         shift, and enter state 24
	'false'        shift, and enter state 25

	Id             goto state 19
	Exp            goto state 49

State 43

	Stmt -> 'if' Exp 'then' . CodeBlock 'else' CodeBlock    (rule 8)

	'{'            shift, and enter state 3

	CodeBlock      goto state 48

State 44

	Exp -> Exp . '+' Exp                                (rule 21)
	Exp -> Exp . '*' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '/' Exp                                (rule 24)
	Exp -> Exp . '<' Exp                                (rule 25)
	Exp -> Exp . '==' Exp                               (rule 26)
	Exp -> Exp . '&&' Exp                               (rule 27)
	Exp -> '!' Exp .                                    (rule 28)

	'then'         reduce using rule 28
	';'            reduce using rule 28
	')'            reduce using rule 28
	'{'            reduce using rule 28
	'+'            reduce using rule 28
	'*'            reduce using rule 28
	'-'            reduce using rule 28
	'/'            reduce using rule 28
	'=='           reduce using rule 28
	'<'            reduce using rule 28
	'&&'           reduce using rule 28


State 45

	Exp -> Exp . '+' Exp                                (rule 21)
	Exp -> Exp . '*' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '/' Exp                                (rule 24)
	Exp -> Exp . '<' Exp                                (rule 25)
	Exp -> Exp . '==' Exp                               (rule 26)
	Exp -> Exp . '&&' Exp                               (rule 27)
	Exp -> '(' Exp . ')'                                (rule 29)

	')'            shift, and enter state 47
	'+'            shift, and enter state 36
	'*'            shift, and enter state 37
	'-'            shift, and enter state 38
	'/'            shift, and enter state 39
	'=='           shift, and enter state 40
	'<'            shift, and enter state 41
	'&&'           shift, and enter state 42


State 46

	Stmt -> 'while' Exp CodeBlock .                     (rule 11)

	id             reduce using rule 11
	'read'         reduce using rule 11
	'print'        reduce using rule 11
	'if'           reduce using rule 11
	'while'        reduce using rule 11
	'}'            reduce using rule 11
	'int'          reduce using rule 11
	'bool'         reduce using rule 11
	'skip'         reduce using rule 11


State 47

	Exp -> '(' Exp ')' .                                (rule 29)

	'then'         reduce using rule 29
	';'            reduce using rule 29
	')'            reduce using rule 29
	'{'            reduce using rule 29
	'+'            reduce using rule 29
	'*'            reduce using rule 29
	'-'            reduce using rule 29
	'/'            reduce using rule 29
	'=='           reduce using rule 29
	'<'            reduce using rule 29
	'&&'           reduce using rule 29


State 48

	Stmt -> 'if' Exp 'then' CodeBlock . 'else' CodeBlock    (rule 8)

	'else'         shift, and enter state 59


State 49

	Exp -> Exp . '+' Exp                                (rule 21)
	Exp -> Exp . '*' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '/' Exp                                (rule 24)
	Exp -> Exp . '<' Exp                                (rule 25)
	Exp -> Exp . '==' Exp                               (rule 26)
	Exp -> Exp . '&&' Exp                               (rule 27)
	Exp -> Exp '&&' Exp .                               (rule 27)

	'then'         reduce using rule 27
	';'            reduce using rule 27
	')'            reduce using rule 27
	'{'            reduce using rule 27
	'+'            shift, and enter state 36
	'*'            shift, and enter state 37
	'-'            shift, and enter state 38
	'/'            shift, and enter state 39
	'=='           shift, and enter state 40
	'<'            shift, and enter state 41
	'&&'           reduce using rule 27


State 50

	Exp -> Exp . '+' Exp                                (rule 21)
	Exp -> Exp . '*' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '/' Exp                                (rule 24)
	Exp -> Exp . '<' Exp                                (rule 25)
	Exp -> Exp '<' Exp .                                (rule 25)
	Exp -> Exp . '==' Exp                               (rule 26)
	Exp -> Exp . '&&' Exp                               (rule 27)

	'then'         reduce using rule 25
	';'            reduce using rule 25
	')'            reduce using rule 25
	'{'            reduce using rule 25
	'+'            shift, and enter state 36
	'*'            shift, and enter state 37
	'-'            shift, and enter state 38
	'/'            shift, and enter state 39
	'=='           reduce using rule 25
	'<'            fail
	'&&'           reduce using rule 25


State 51

	Exp -> Exp . '+' Exp                                (rule 21)
	Exp -> Exp . '*' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '/' Exp                                (rule 24)
	Exp -> Exp . '<' Exp                                (rule 25)
	Exp -> Exp . '==' Exp                               (rule 26)
	Exp -> Exp '==' Exp .                               (rule 26)
	Exp -> Exp . '&&' Exp                               (rule 27)

	'then'         reduce using rule 26
	';'            reduce using rule 26
	')'            reduce using rule 26
	'{'            reduce using rule 26
	'+'            shift, and enter state 36
	'*'            shift, and enter state 37
	'-'            shift, and enter state 38
	'/'            shift, and enter state 39
	'=='           fail
	'<'            shift, and enter state 41
	'&&'           reduce using rule 26


State 52

	Exp -> Exp . '+' Exp                                (rule 21)
	Exp -> Exp . '*' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '/' Exp                                (rule 24)
	Exp -> Exp '/' Exp .                                (rule 24)
	Exp -> Exp . '<' Exp                                (rule 25)
	Exp -> Exp . '==' Exp                               (rule 26)
	Exp -> Exp . '&&' Exp                               (rule 27)

	'then'         reduce using rule 24
	';'            reduce using rule 24
	')'            reduce using rule 24
	'{'            reduce using rule 24
	'+'            reduce using rule 24
	'*'            reduce using rule 24
	'-'            reduce using rule 24
	'/'            reduce using rule 24
	'=='           reduce using rule 24
	'<'            reduce using rule 24
	'&&'           reduce using rule 24


State 53

	Exp -> Exp . '+' Exp                                (rule 21)
	Exp -> Exp . '*' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp '-' Exp .                                (rule 23)
	Exp -> Exp . '/' Exp                                (rule 24)
	Exp -> Exp . '<' Exp                                (rule 25)
	Exp -> Exp . '==' Exp                               (rule 26)
	Exp -> Exp . '&&' Exp                               (rule 27)

	'then'         reduce using rule 23
	';'            reduce using rule 23
	')'            reduce using rule 23
	'{'            reduce using rule 23
	'+'            reduce using rule 23
	'*'            shift, and enter state 37
	'-'            reduce using rule 23
	'/'            shift, and enter state 39
	'=='           reduce using rule 23
	'<'            reduce using rule 23
	'&&'           reduce using rule 23


State 54

	Exp -> Exp . '+' Exp                                (rule 21)
	Exp -> Exp . '*' Exp                                (rule 22)
	Exp -> Exp '*' Exp .                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '/' Exp                                (rule 24)
	Exp -> Exp . '<' Exp                                (rule 25)
	Exp -> Exp . '==' Exp                               (rule 26)
	Exp -> Exp . '&&' Exp                               (rule 27)

	'then'         reduce using rule 22
	';'            reduce using rule 22
	')'            reduce using rule 22
	'{'            reduce using rule 22
	'+'            reduce using rule 22
	'*'            reduce using rule 22
	'-'            reduce using rule 22
	'/'            shift, and enter state 39
	'=='           reduce using rule 22
	'<'            reduce using rule 22
	'&&'           reduce using rule 22


State 55

	Exp -> Exp . '+' Exp                                (rule 21)
	Exp -> Exp '+' Exp .                                (rule 21)
	Exp -> Exp . '*' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '/' Exp                                (rule 24)
	Exp -> Exp . '<' Exp                                (rule 25)
	Exp -> Exp . '==' Exp                               (rule 26)
	Exp -> Exp . '&&' Exp                               (rule 27)

	'then'         reduce using rule 21
	';'            reduce using rule 21
	')'            reduce using rule 21
	'{'            reduce using rule 21
	'+'            reduce using rule 21
	'*'            shift, and enter state 37
	'-'            shift, and enter state 38
	'/'            shift, and enter state 39
	'=='           reduce using rule 21
	'<'            reduce using rule 21
	'&&'           reduce using rule 21


State 56

	Init -> ':=' Exp .                                  (rule 15)
	Exp -> Exp . '+' Exp                                (rule 21)
	Exp -> Exp . '*' Exp                                (rule 22)
	Exp -> Exp . '-' Exp                                (rule 23)
	Exp -> Exp . '/' Exp                                (rule 24)
	Exp -> Exp . '<' Exp                                (rule 25)
	Exp -> Exp . '==' Exp                               (rule 26)
	Exp -> Exp . '&&' Exp                               (rule 27)

	';'            reduce using rule 15
	'+'            shift, and enter state 36
	'*'            shift, and enter state 37
	'-'            shift, and enter state 38
	'/'            shift, and enter state 39
	'=='           shift, and enter state 40
	'<'            shift, and enter state 41
	'&&'           shift, and enter state 42


State 57

	Stmt -> PTy Id Init ';' .                           (rule 7)

	id             reduce using rule 7
	'read'         reduce using rule 7
	'print'        reduce using rule 7
	'if'           reduce using rule 7
	'while'        reduce using rule 7
	'}'            reduce using rule 7
	'int'          reduce using rule 7
	'bool'         reduce using rule 7
	'skip'         reduce using rule 7


State 58

	Stmt -> Id ':=' Exp ';' .                           (rule 6)

	id             reduce using rule 6
	'read'         reduce using rule 6
	'print'        reduce using rule 6
	'if'           reduce using rule 6
	'while'        reduce using rule 6
	'}'            reduce using rule 6
	'int'          reduce using rule 6
	'bool'         reduce using rule 6
	'skip'         reduce using rule 6


State 59

	Stmt -> 'if' Exp 'then' CodeBlock 'else' . CodeBlock    (rule 8)

	'{'            shift, and enter state 3

	CodeBlock      goto state 60

State 60

	Stmt -> 'if' Exp 'then' CodeBlock 'else' CodeBlock .    (rule 8)

	id             reduce using rule 8
	'read'         reduce using rule 8
	'print'        reduce using rule 8
	'if'           reduce using rule 8
	'while'        reduce using rule 8
	'}'            reduce using rule 8
	'int'          reduce using rule 8
	'bool'         reduce using rule 8
	'skip'         reduce using rule 8


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 30
Number of terminals: 27
Number of non-terminals: 9
Number of states: 61
